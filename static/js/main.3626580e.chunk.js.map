{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","time","timingFunction","setInterval","setTime","dateToString","Date","toLocaleTimeString","setState","console","log","this","prevProps","props","name","clearInterval","React","Component","App","isClockVisible","clockName","changeClockVisibility","prevState","changeName","Math","floor","random","toString","className","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"uMAUaA,EAAb,4MACEC,MAAe,CACbC,KAAM,IAFV,EAKEC,eAAiBC,aAAY,WAC3B,EAAKC,YACJ,KAPL,EAwBEA,QAAU,WACR,IACMC,GADO,IAAIC,MACSC,qBAE1B,EAAKC,SAAS,CAAEP,KAAMI,IAEtBI,QAAQC,IAAIL,IA9BhB,uDASE,WACE,OAAOM,KAAKT,iBAVhB,gCAaE,SAAmBU,GACbD,KAAKE,MAAMC,OAASF,EAAUE,MAEhCL,QAAQC,IAAR,qCAA0CE,EAAUE,KAApD,eAA+DH,KAAKE,MAAMC,SAhBhF,kCAoBE,WACEC,cAAcJ,KAAKT,kBArBvB,oBAiCE,WAGE,OAFiBS,KAAKX,MAAdC,SAlCZ,GAA2Be,IAAMC,W,eCiClBC,E,4MAjCblB,MAAe,CACbmB,gBAAgB,EAChBC,UAAW,sB,EAGbC,sBAAwB,WACtB,EAAKb,UAAS,SAACc,GAAD,MAAgB,CAAEH,gBAAiBG,EAAUH,oB,EAG7DI,WAAa,WACX,EAAKf,SAAS,CAAEY,UAAWI,KAAKC,MAAsB,IAAhBD,KAAKE,UAAmBC,c,4CAGhE,WACE,MAAsChB,KAAKX,MAAnCmB,EAAR,EAAQA,eAAgBC,EAAxB,EAAwBA,UAExB,OACE,sBAAKQ,UAAU,MAAf,UACE,oBAAIA,UAAU,aAAd,yBACA,oBAAGA,UAAU,YAAb,0BAEG,IACAT,GAAkB,cAAC,EAAD,CAAOL,KAAMM,OAElC,sBAAKQ,UAAU,kBAAf,UACE,wBAAQC,KAAK,SAASD,UAAU,cAAcE,QAASnB,KAAKU,sBAA5D,SAAoFF,EAAiB,aAAe,eACnHA,GAAkB,wBAAQU,KAAK,SAASD,UAAU,cAAcE,QAASnB,KAAKY,WAA5D,uC,GA3BXP,IAAMC,WCNxBc,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.3626580e.chunk.js","sourcesContent":["import React from 'react';\n\ntype State = {\n  time: string;\n};\n\ntype Props = {\n  name: string;\n};\n\nexport class Clock extends React.Component<Props, State> {\n  state: State = {\n    time: '',\n  };\n\n  timingFunction = setInterval(() => {\n    this.setTime();\n  }, 1000);\n\n  componentDidMount() {\n    return this.timingFunction;\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (this.props.name !== prevProps.name) {\n      // eslint-disable-next-line\n      console.log(`The Clock was renamed from ${prevProps.name} to ${this.props.name}`);\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timingFunction);\n  }\n\n  setTime = () => {\n    const date = new Date();\n    const dateToString = date.toLocaleTimeString();\n\n    this.setState({ time: dateToString });\n    // eslint-disable-next-line\n    console.log(dateToString);\n  };\n\n  render() {\n    const { time } = this.state;\n\n    return time;\n  }\n}\n","import React from 'react';\nimport { Clock } from './components/Clock';\nimport './App.scss';\n\ntype State = {\n  isClockVisible: boolean;\n  clockName: string;\n};\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    isClockVisible: true,\n    clockName: 'Default Clock name',\n  };\n\n  changeClockVisibility = () => {\n    this.setState((prevState) => ({ isClockVisible: !prevState.isClockVisible }));\n  };\n\n  changeName = () => {\n    this.setState({ clockName: Math.floor(Math.random() * 100000).toString() });\n  };\n\n  render() {\n    const { isClockVisible, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"App__title\">React clock</h1>\n        <p className=\"App__time\">\n          Current time:\n          {' '}\n          {isClockVisible && <Clock name={clockName} />}\n        </p>\n        <div className=\"App__button-set\">\n          <button type=\"button\" className=\"App__button\" onClick={this.changeClockVisibility}>{isClockVisible ? 'Hide clock' : 'Show clock'}</button>\n          {isClockVisible && <button type=\"button\" className=\"App__button\" onClick={this.changeName}>Set random name</button>}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}